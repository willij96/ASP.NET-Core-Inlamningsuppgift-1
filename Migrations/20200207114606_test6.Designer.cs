// <auto-generated />
using System;
using FreakyFashion1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreakyFashion1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200207114606_test6")]
    partial class test6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreakyFashion1.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Klänning"
                        },
                        new
                        {
                            Id = 2,
                            Name = "T-shirt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Byxor"
                        });
                });

            modelBuilder.Entity("FreakyFashion1.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 499m
                        },
                        new
                        {
                            Id = 9,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 499m
                        },
                        new
                        {
                            Id = 2,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 399m
                        },
                        new
                        {
                            Id = 17,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 499m
                        },
                        new
                        {
                            Id = 4,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 499m
                        },
                        new
                        {
                            Id = 20,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 499m
                        },
                        new
                        {
                            Id = 12,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 499m
                        },
                        new
                        {
                            Id = 7,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 499m
                        },
                        new
                        {
                            Id = 21,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 399m
                        },
                        new
                        {
                            Id = 3,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 399m
                        },
                        new
                        {
                            Id = 10,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 399m
                        },
                        new
                        {
                            Id = 22,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 399m
                        },
                        new
                        {
                            Id = 13,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 399m
                        },
                        new
                        {
                            Id = 8,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 399m
                        },
                        new
                        {
                            Id = 14,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 399m
                        },
                        new
                        {
                            Id = 23,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 499m
                        },
                        new
                        {
                            Id = 16,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 399m
                        },
                        new
                        {
                            Id = 5,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 399m
                        },
                        new
                        {
                            Id = 18,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 399m
                        },
                        new
                        {
                            Id = 15,
                            ArticleNumber = "100",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 499m
                        },
                        new
                        {
                            Id = 11,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/Prada.jpg",
                            Name = "T-shirt",
                            Price = 399m
                        },
                        new
                        {
                            Id = 19,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 399m
                        },
                        new
                        {
                            Id = 6,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/beicheDress.jpg",
                            Name = "Klänning",
                            Price = 399m
                        },
                        new
                        {
                            Id = 24,
                            ArticleNumber = "200",
                            Description = "Lorem ipsum dolor",
                            ImageUrl = "/images/jeans.jpg",
                            Name = "Byxor",
                            Price = 399m
                        });
                });

            modelBuilder.Entity("FreakyFashion1.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FreakyFashion1.Models.ProductCategory", b =>
                {
                    b.HasOne("FreakyFashion1.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreakyFashion1.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
